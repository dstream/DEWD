<?xml version="1.0"?>
<dewd xmlns="http://eksponent.com/dewd/1.2">
  <!--
    This is the configuration file for DEWD. For more information go to http://dewd.codeplex.com/
          
    See a few examples below. Build-in tables for umbraco were used to keep things simple 
    in the examples, but please don't put any of this stuff in production, it's just for show! :)
  -->
  <!-- Example: Include other configuration files with wildcard search -->
  <tweak do="clone" external="/config/dewd/*.config" />

  <!-- Example: Container (folder) with 3 examples of repositories. Containers can be nested -->
  <container name="Umbraco hacking tools">

    <!-- Example: Simple log viewer for the internal Umbraco log -->
    <repository name="Log viewer">
      <primaryKey name="id" />

      <!-- Example: Using SQL parameter to filter rows; custom page size and a custom buttC:\Users\sune.boeegh\Documents\Visual Studio 2010\Projects\Eksponent.Dewd\Eksponent.Dewd\config\Eksponent.Dewd.configon for removing all entries. -->
      <view name="Todays entries" pageSize="50">
        <columns>
          <column field="Category,User" title="Category (user)" format="{0} ({1})" nowrap="true" />
          <column field="Time" />
          <column field="Comment" />
          <column type="Details" field="Category,User,Time,Details" />
        </columns>
        <sql>
          <![CDATA[
            SELECT umbracoLog.id, logHeader AS Category, Datestamp AS [Time], logComment AS Comment, userName AS [User], logComment AS Details 
            FROM umbracoLog LEFT JOIN umbracoUser ON umbracoUser.id=umbracoLog.userId
            ORDER BY umbracoLog.id DESC
          ]]>
        </sql>
        <parameter name="@today" get="today" />

        <button type="TableButton" icon="cross.png" text="Remove all entries" onClientClick="return confirm('Are you sure?');">
          <sql>DELETE FROM umbracoLog</sql>
        </button>
        <button type="ExportToExcelButton" />
      </view>
    </repository>

    <!-- Example: View and edit the applications registered in Umbraco; validation, one-to-many/many-to-many field -->
    <repository name="Applications (deprecated as of v4.8)">
      <primaryKey name="appAlias" manual="true" />

      <view name="All">
        <sql><![CDATA[SELECT appAlias, appName FROM [umbracoApp] ORDER BY [sortOrder]]]></sql>
      </view>
      <view name="All reversed">
        <sql>
          <tweak do="clone" select="../../../view[@name='All']/*" /> DESC
        </sql>
      </view>

      <editor tableName="umbracoApp">
        <field title="Alias" sourceField="appAlias" umbracoDataType="Textstring">
          <validation required="true" />
        </field>
        <field title="Name" sourceField="appName" umbracoDataType="Textstring" />
        <field title="Icon" sourceField="appIcon" umbracoDataType="Textstring" />
        <field title="Sort order" sourceField="sortOrder" umbracoDataType="Textstring">
          <defaultValue>
            <value>0</value>
            <revertTrigger type="IsNullOrEmpty" />
            <revertTrigger type="RegEx" pattern="^\d+$" negate="true" />
          </defaultValue>
        </field>
        <field title="InitWithTreeAlias" sourceField="appInitWithTreeAlias" umbracoDataType="Dewd Dropdown">
          <nullable whenValueEquals="" />
          <listControlDataSource includeEmpty="true" emptyValue="">
            <sql><![CDATA[SELECT treeAlias, treeTitle FROM [umbracoAppTree] ORDER BY treeSortOrder]]></sql>
          </listControlDataSource>
        </field>
        <field type="TableLinkingField" title="Users" umbracoDataType="Dewd DuoSelect" tabTitle="Security">
          <select sortable="false" />
          <listControlDataSource>
            <sql><![CDATA[SELECT id, userName FROM [umbracoUser] ORDER BY id]]></sql>
          </listControlDataSource>
          <linkingField linkingTable="umbracoUser2app" localKey="[app]" foreignKey="[user]" />
        </field>
      </editor>
    </repository>

    <!-- Example: Just included to make tree configuration easy. -->
    <repository name="Trees (deprecated as of v4.8)">
      <primaryKey name="treeAlias" manual="true" />

      <view name="All">
        <sql><![CDATA[SELECT appAlias, treeAlias, treeTitle FROM [umbracoAppTree] ORDER BY [treeSortOrder]]]></sql>
      </view>

      <editor tableName="umbracoAppTree">
        <field type="YesNo" title="Silent" sourceField="treeSilent" umbracoDataType="True/false">
          <caption>Determines whether or not to show the top node inside the nodetree.</caption>
          <defaultValue>0</defaultValue>
        </field>
        <field type="YesNo" title="Initialize" sourceField="treeInitialize" umbracoDataType="True/false">
          <caption>Determines whether or not to display the tree when the node is rendered.</caption>
          <defaultValue>1</defaultValue>
        </field>
        <field title="Sort order" sourceField="treeSortOrder" umbracoDataType="Textstring">
          <caption>The sort order column takes a numeric value and is used to determine the display order of app trees in ascending order.</caption>
          <defaultValue>
            <value>0</value>
            <revertTrigger type="IsNullOrEmpty" />
            <revertTrigger type="RegEx" pattern="^\d+$" negate="true" />
          </defaultValue>
        </field>
        <field title="App Alias" sourceField="appAlias" umbracoDataType="Dewd Dropdown">
          <caption>Must be set to the value appAlias of the app (section) that the tree will be displayed.</caption>
          <validation required="true" />
          <listControlDataSource includeEmpty="false">
            <sql><![CDATA[SELECT appName, appAlias FROM [umbracoApp] ORDER BY sortOrder]]></sql>
          </listControlDataSource>
        </field>
        <field title="Tree Alias" sourceField="treeAlias" umbracoDataType="Textstring">
          <caption>The unique identifier for the umbracoAppTree. This must be unique.</caption>
          <validation required="true" />
        </field>

        <field title="treeTitle" sourceField="treeTitle" umbracoDataType="Textstring">
          <caption>The display name for an umbracoAppTree</caption>
        </field>
        <field title="treeIconClosed" sourceField="treeIconClosed" umbracoDataType="Textstring" tabTitle="Icons">
          <caption>This can be either a CSS class name or an image filename and is used to determine the icon to display when the tree node is closed.</caption>
          <defaultValue>.sprTreeFolder</defaultValue>
        </field>
        <field title="treeIconOpen" sourceField="treeIconOpen" umbracoDataType="Textstring" tabTitle="Icons">
          <caption>This can be either a CSS class name or an image filename and is used to determine the icon to display when the tree node is open.</caption>
          <defaultValue>.sprTreeFolder_o</defaultValue>
        </field>
        <field title="treeHandlerAssembly" sourceField="treeHandlerAssembly" umbracoDataType="Textstring" tabTitle="Type">
          <caption>This is the name of the assembly that loads the tree nodes.</caption>
        </field>
        <field title="treeHandlerType" sourceField="treeHandlerType" umbracoDataType="Textstring" tabTitle="Type">
          <caption>This is the name of the class in the treeHandlerAssembly that is responsible for loading the tree nodes. The class must inherit from BaseTree in umbraco.cms.presentation.Trees.</caption>
        </field>
        <field title="action" sourceField="action" umbracoDataType="Textstring">
          <caption></caption>
          <nullable whenValueEquals="" />
        </field>
      </editor>
    </repository>

    <!-- Example: View and edit the languages registered; regex validation, captions and configuration tweaks -->
    <repository name="Languages" icon="mediaFile.gif">
      <primaryKey name="id" />
      <view name="All">
        <columns>languageISOCode,languageCultureName</columns>
        <sql>
          <![CDATA[SELECT id, [languageISOCode], [languageCultureName] FROM [umbracoLanguage]]]>
        </sql>
      </view>
      <editor tableName="umbracoLanguage">
        <myValidators name="culture">
          <validation required="true" />
          <validation type="RegEx"
                      pattern="^[a-zA-Z]{2}\-[a-zA-Z]{2}$"
                      errorText="Field {0} must contain a valid .NET culture name (eg. da-DK)" />
        </myValidators>

        <field title="ISO code" sourceField="languageISOCode" umbracoDataType="Textstring" tabTitle="Language">
          <caption>A valid ISO code</caption>
          <tweak do="clone" select="../../myValidators[@name='culture']/*" />
          <defaultValue>en-GB (bad value)</defaultValue>
        </field>
        <field title="Culture name" sourceField="languageCultureName" umbracoDataType="Textstring" defaultValue="en-GB" tabTitle="Language">
          <caption>A valid .NET culture name</caption>
          <tweak do="clone" select="../../myValidators[@name='culture']/*" />
        </field>
      </editor>
    </repository>

    <!-- Example: Test data types. Requires non-standard tables created in DB:
      CREATE TABLE [dbo].[DewdTestTable](
	      [TestID] [int] IDENTITY(1,1) NOT NULL,
	      [TestGUID] [uniqueidentifier] NOT NULL,
	      [TestString] [varchar](max) NOT NULL,
	      [TestStringNullable] [varchar](max) NULL,
	      [TestDate] [datetime] NULL,
	      [TestRelationInt] [int] NOT NULL,
	      [TestRelationIntNullable] [int] NULL,
	      [TestBit] [bit] NOT NULL
      ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
    
      CREATE TABLE [dbo].[DewdTestLinkingTable](
	      [KeyA] [int] NOT NULL,
	      [KeyB] [int] NOT NULL
      ) ON [PRIMARY]
    -->
    <!--
    <repository name="Test Table" icon="mediaFile.gif">
      <primaryKey name="TestID" />
      <view name="All">
        <columns>TestString</columns>
        <sql>
          <![CDATA[SELECT TestID, TestString FROM [DewdTestTable]]]>
        </sql>
      </view>
      <editor tableName="DewdTestTable">
        <field title="ID (XML)" sourceField="TestString" umbracoDataType="Readonly" readonly="true" />
        <field title="GUID" sourceField="TestGUID" umbracoDataType="Readonly" />
        <field title="String" sourceField="TestString" umbracoDataType="Textstring" />
        <field title="Date/Nullable" sourceField="TestDate" umbracoDataType="Date Picker">
          <caption>Sets future date for 2011. Set DbNull for 2012.</caption>
          <nullable whenValueEquals="2012-01-01" />
        </field>
        <field title="None-DB field" umbracoDataType="Readonly" readonly="true">
          <defaultValue get="now" />
        </field>
        <field title="Linking" umbracoDataType="Dewd DuoSelect" readonly="true">
          <linkingField localKey="KeyA" linkingTable="DewdTestLinkingTable" foreignKey="KeyB" />
          <listControlDataSource>
            <sql>SELECT TestID, TestString FROM [DewdTestTable]</sql>
          </listControlDataSource>
          <select sortable="true" />
        </field>  
        <field title="Self-referential" sourceField="TestRelationInt" umbracoDataType="Dewd Dropdown">
          <listControlDataSource includeEmpty="true">
            <sql>SELECT TestID, TestString FROM [DewdTestTable]</sql>
          </listControlDataSource>
        </field>
        <field title="Self-referential nullable" sourceField="TestRelationIntNullable" umbracoDataType="Dewd Dropdown">
          <listControlDataSource includeEmpty="true">
            <sql>SELECT TestID, TestString FROM [DewdTestTable]</sql>
          </listControlDataSource>
        </field>
        <field title="Bit" sourceField="TestBit" umbracoDataType="True/false" type="YesNo" />
      </editor>
    </repository>-->

    <!-- Example: Accessing Umbraco nodes -->
    <repository type="UmbracoRepository" name="Nodes">
      <primaryKey name="SysId" />
      <view name="Root" nodeId="1051" axis="descendants-or-self">
        <columns>
          <column field="SysId" title="" format="&lt;a target='_top' href='/umbraco/umbraco.aspx?app=content&amp;rightAction=editContent&amp;id={0}#content'&gt;Umbraco Edit&lt;a/&gt;" />
          <column field="SysId" title="ID" />
          <column field="SysText" title="Name" />
          <column field="SysUpdateDate" title="Last update" />
        </columns>
      </view>
      <editor>
        <field title="ID" sourceField="SysId" umbracoDataType="Textstring" readonly="true" />
        <field title="Name" sourceField="SysText" umbracoDataType="Textstring" />
        <!--
        <field title="Generic Title" sourceField="title" umbracoDataType="Textstring" />
        <field title="Generic Text" sourceField="text" umbracoDataType="Richtext editor" />
        -->
      </editor>
    </repository>

  </container>
</dewd>

